{"name":"Pip","google":"","tagline":"A tiny PHP application framework.","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"#PIP\r\n\r\nPIP is a tiny application framework built for people who use a LAMP stack. PIP aims to be as simple as possible to set up and use.\r\n\r\nVisit [http://gilbitron.github.com/PIP](http://gilbitron.github.com/PIP/) for more information and documentation.\r\n\r\n## Requirements\r\n\r\n* PHP 5.1 or greater\r\n* MySQL 4.1.2 or greater\r\n* The mod_rewrite Apache module\r\n\r\n## Installation\r\n\r\n* Download PIP and extract\r\n* Navigate to `application/config/config.php` and fill in your `base_url`\r\n* You are ready to rock! Point your browser to your `base_url` and hopefully see a welcome message.\r\n\r\n## Documentation\r\n\r\nVisit [http://gilbitron.github.com/PIP](http://gilbitron.github.com/PIP/) to see the documentation.\r\n\r\nThere are several helper functions that can also be used in controllers. Most of these functions take the parameter $name of the corresponding class:\r\n\r\nload->model($name) - Load a model\r\n\r\nload->view($name) - Load a view\r\n\r\nload->helper($name) - Load a helper\r\n\r\nredirect($location) - Redirect to a page without having to include the base URL. E.g:\r\n  \r\n    $this->redirect('some_class/some_function');\r\n    $this->load->helper('Session_helper');\r\n\r\n\r\n## License\r\n\r\nPIP is released under the MIT license.\r\n\r\n[![endorse](http://api.coderwall.com/thezombieguy/endorsecount.png)](http://coderwall.com/thezombieguy)"}